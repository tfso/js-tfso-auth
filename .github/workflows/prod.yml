name: (Release) Prod

on:
  push:
    tags:
      - 'v[0-9]+\.[0-9]+\.[0-9]+'

env:
  SERVICE_NAME: js-tfso-auth
  TEAM_NAME: tfso
  MODULE_NAME: js-tfso-auth

  ENVIRONMENT: prod

  # environment variables prefixed with `TFSO_` will be exposed in rancher 2 on deploy without the prefix
  TFSO_NODE_ENV: prod

jobs:
  setup:
    if: github.ref_type == 'tag' && env.SERVICE_NAME
    runs-on: ubuntu-latest
    environment: ${{ env.ENVIRONMENT }}
    outputs:
      version: v${{ steps.semver.outputs.fullversion }}
      prerelease: ${{ steps.semver.outputs.prerelease }}
      services: ${{ steps.script.outputs.result }}

    steps:
      - name: extract tag version
        id: semver
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ github.ref }}
          version_extractor_regex: 'refs\/tags\/v(.*)$'

      - name: extract services
        uses: actions/github-script@v6
        id: script
        env:
          SERVICES: ${{ env.SERVICE_NAME }}
        with:
          result-encoding: string
          script: |
            return JSON.stringify(String(process.env.SERVICES).split(/[\n\s]/i).filter(v => v.length > 0))
  deploy:
    if: needs.setup.outputs.prerelease == ''
    name: Deploy
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        SERVICE_NAME: ${{ fromJson(needs.setup.outputs.services) }}
      max-parallel: 1

    steps:
      - uses: tfso/action-deployment@v1.0.3
        name: Deploy
        with:
          type: ${{ env.DEPLOYMENT_TYPE || 'api' }}
          service_name: ${{ matrix.SERVICE_NAME }}
          image_name: ${{ format('tfso/{0}', github.event.repository.name) }}
          version: ${{ needs.setup.outputs.version }}
          team: ${{ env.TEAM_NAME }}
          module: ${{ env.MODULE_NAME }}
          deployment_token: ${{ secrets.DEPLOYMENT_API_TOKEN }}
          environment: ${{ env.ENVIRONMENT }}
          container-port: ${{ env.CONTAINER_PORT || 3000 }}
          http-endpoint: ${{ env.ENDPOINT }}

  release:
    name: release
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: tfso/action-changelog-release@v1.1.0
        name: Create Github Release
        id: release

      - uses: tfso/action-changelog-tfso@v1.2.3
        name: Update internal changelog
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          google_private_key: ${{ secrets.GOOGLE_CHANGELOG_PRIVATE_KEY }}
          google_changelog_spreadsheets_id: ${{ secrets.GOOGLE_CHANGELOG_SPREADSHEETS_ID }}
          google_email: ${{ secrets.GOOGLE_CHANGELOG_EMAIL }}
          service_name: ${{ github.event.repository.name }}
          team: ${{ env.TEAM_NAME }}
          module: ${{ env.MODULE_NAME }}
          release_type: ${{ steps.release.outputs.release_type }}