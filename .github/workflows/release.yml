name: (Release) Package

on:
    push:
        tags:
            - 'v[0-9]+\.[0-9]+\.[0-9]+' # only full releases, eg v1.0.1

jobs:
    setup:
        environment: prod
        runs-on: ubuntu-latest
        name: find version
        outputs:
            version: v${{ steps.semver.outputs.fullversion }}
            prerelease: ${{ steps.semver.outputs.prerelease }}
        steps:
            - name: extract tag version
              id: semver
              uses: booxmedialtd/ws-action-parse-semver@v1
              with:
                  input_string: ${{ github.ref }}
                  version_extractor_regex: 'refs\/tags\/v(.*)$'

    download:
        if: needs.setup.outputs.prerelease == ''
        runs-on: ubuntu-latest
        name: download package
        needs: setup
        outputs:
            version: ${{ needs.setup.outputs.version }}
            prerelease: ${{ needs.setup.outputs.prerelease }}
        steps:
            - name: set vars
              id: vars
              run: |
                  echo "::set-output name=source::$(echo "${{ format('s3://{0}/github-artifacts/tfso/{1}/{2}.zip', secrets.AWS_ARTIFACT_BUCKET, format('tfso-{0}', github.event.repository.name), needs.setup.outputs.version) }}")"
                  echo "::set-output name=destination::$( echo "./package.zip")"

            - run: aws s3 cp ${{ steps.vars.outputs.source }} ${{ steps.vars.outputs.destination }}
              shell: bash
              name: download package from S3
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ARTIFACT_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ARTIFACT_SECRET_ACCESS_KEY }}
                  AWS_DEFAULT_REGION: 'eu-west-1'

            - name: unzip package
              run: |
                  unzip package.zip
                  rm -f package.zip
            - name: upload package
              uses: actions/upload-artifact@v2
              with:
                  name: package
                  path: .
                  retention-days: 90

    publish:
        runs-on: ubuntu-latest
        name: publish
        needs: [setup, download]
        steps:
            - name: download package
              uses: actions/download-artifact@v2
              with:
                  name: package

            - name: setup
              uses: actions/setup-node@v2
              with:
                  node-version: 14
                  registry-url: 'https://npm.pkg.github.com'
                  scope: '@tfso'

            - name: extract package version
              id: semver_package
              uses: Saionaro/extract-package-version@v1.0.6

            - name: compare package version with tag version
              if: format('v{0}', steps.semver_package.outputs.version) != needs.setup.outputs.version
              run: |
                  echo "version from package v${{ steps.semver_package.outputs.version }} is not matching tag version ${{ needs.setup.outputs.version }}"
                  exit 1
            - name: publish version
              run: |
                  npm publish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    release:
        runs-on: ubuntu-latest
        needs: publish
        steps:
            - uses: tfso/action-changelog-release@v1.1.0
              name: create github release
              with:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
